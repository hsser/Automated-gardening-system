Running the Automated Gardening System

How to Run the System:

1. GardenApplication.java:

Purpose: This is the main JavaFX application that provides a graphical user interface to interact with the virtual garden.
Usage: Execute this application to start the simulation in a user-friendly environment where you can manually trigger events, monitor the garden’s status, and adjust settings through a graphical interface.

2. GardenSimulator.java:

Purpose: A testing tool used via the API to test the resilience and robustness of the code under various simulated conditions.
Usage: Run this simulator if you wish to test how the system behaves under automated, scripted conditions. This is particularly useful for debugging and ensuring that the system responds correctly to a series of events.

System Overview:

The Automated Gardening System is designed to dynamically simulate an interactive garden environment. It incorporates real-time changes and interactions based on several subsystems and user inputs.

Daily Tasks:

1. Weather and Temperature: At the start of each day, the system randomly alters weather conditions and temperature to simulate real environmental changes.
2. Pest Attacks: Random pest attacks are simulated, requiring the system’s immediate response to protect the plant health.
3. Humidity Adjustment: The system automatically decreases the humidity level of all plants by 5 daily to mimic natural drying.

Key Components:

1. Watering System:
Components: Includes water sensors and water controllers.
Functionality: The sensors monitor the plant’s humidity levels, triggering the water controller to activate sprinklers if the plants are dry or apply protective measures if plants are overwatered.

2. Temperature System:
Components: Includes a temperature sensor and a temperature controller.
Functionality: Operates similarly to the watering system, where the cooler or heater adjusts the garden’s temperature to optimal levels for plant growth.

3. Pest Control System:
Components: Includes pest sensors and pest controllers.
Functionality: Detects pest activities and decides whether to release beneficial insects like ladybugs or apply pesticides.

4. User Overrides:
Description: Users have the capability to override automatic systems via the API, setting specific environmental conditions or triggering specific actions. These user-defined events coexist with daily automated events, ensuring that routine environmental adjustments occur regardless of user interventions.